{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MACMC,EAAWC,SAASC,cAAc,QAExCF,EAASG,iBAAiB,SAK1B,SAAqBC,GACnBC,EAAkBD,EAAIE,OAAOC,MAAQH,EAAIE,OAAOE,MAChDC,aAAaC,QAVK,qBAUgBC,KAAKC,UAAUP,G,IANnDL,EAASG,iBAAiB,UAS1B,SAAsBC,GAEpB,GADAA,EAAIS,kBAEDR,EAAkBS,QAClBT,EAAkBU,OAClBV,EAAkBW,OAEnB,OAEF,IAAIC,EAAYC,OAAOb,EAAkBS,OACzC,MAAMK,EAAWD,OAAOb,EAAkBU,MACpCK,EAAaF,OAAOb,EAAkBW,QAE5CK,QAAQC,IAAIb,aAAac,QA1BP,uBA2BlBnB,EAAIE,OAAOkB,QACXf,aAAagB,WA5BK,sBA8BlB,IAAK,IAAIT,EAAS,EAAGA,EAASI,EAAYJ,IACxCU,EAAcV,EAAS,EAAIC,GAAaE,GACrCQ,MAAK,EAACC,SAAEA,EAAQd,MAAEA,MACjBe,EAAA/B,GAASgC,OAAOC,QACd,uBAAqBH,QAAiBd,MAAU,IAGnDkB,OAAM,EAACJ,SAAEA,EAAQd,MAAEA,MAClBe,EAAA/B,GAASgC,OAAOG,QACd,sBAAoBL,QAAed,MAAU,IAIrD,SAASY,EAAcE,EAAUd,GAY/B,OAXgB,IAAIoB,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEP,E,MAAUd,IAEpBsB,EAAO,C,SAAER,E,MAAUd,GAAQ,GAE3BA,GAASK,EAAU,G,KA9C7B,MAAMd,EAAoBM,KAAK8B,MAAMhC,aAAac,QAN9B,wBAMuD","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst STORAGE_KEY = 'promise-form-state';\nconst formData = document.querySelector('form');\n\nformData.addEventListener('input', onFormInput);\nformData.addEventListener('submit', onFormSubmit);\n\nconst formDataInStorage = JSON.parse(localStorage.getItem(STORAGE_KEY)) || {};\n\nfunction onFormInput(evt) {\n  formDataInStorage[evt.target.name] = evt.target.value;\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(formDataInStorage));\n}\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n  if (\n    !formDataInStorage.delay ||\n    !formDataInStorage.step ||\n    !formDataInStorage.amount\n  ) {\n    return;\n  }\n  let delayData = Number(formDataInStorage.delay);\n  const stepData = Number(formDataInStorage.step);\n  const amountData = Number(formDataInStorage.amount);\n\n  console.log(localStorage.getItem(STORAGE_KEY));\n  evt.target.reset();\n  localStorage.removeItem(STORAGE_KEY);\n\n  for (let amount = 0; amount < amountData; amount++)\n    createPromise(amount + 1, (delayData += stepData))\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n  function createPromise(position, delay) {\n    const promise = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, (delay -= stepData));\n    });\n\n    return promise;\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$formData","document","querySelector","addEventListener","evt","$47d4ff9957288465$var$formDataInStorage","target","name","value","localStorage","setItem","JSON","stringify","preventDefault","delay","step","amount","delayData","Number","stepData","amountData","console","log","getItem","reset","removeItem","createPromise","then","position","$parcel$interopDefault","Notify","success","catch","failure","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","parse"],"version":3,"file":"03-promises.20926de8.js.map"}